/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package me.him188.ani.datasources.bangumi.next.apis

import me.him188.ani.datasources.bangumi.next.models.BangumiNextErrorResponse
import me.him188.ani.datasources.bangumi.next.models.BangumiNextGetGroupTopicsByGroupName200Response
import me.him188.ani.datasources.bangumi.next.models.BangumiNextGroupProfile
import me.him188.ani.datasources.bangumi.next.models.BangumiNextListGroupMembersByName200Response
import me.him188.ani.datasources.bangumi.next.models.BangumiNextListGroupMembersByNameTypeParameter
import me.him188.ani.datasources.bangumi.next.models.BangumiNextTopicDetail

import me.him188.ani.datasources.bangumi.next.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class TopicBangumiNextApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(
        baseUrl = baseUrl,
        httpClientEngine = httpClientEngine,
        httpClientConfig = httpClientConfig,
        jsonBlock = jsonSerializer,
    )

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ) : super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     *
     * 获取小组首页
     * @param groupName
     * @param limit  (optional, default to 20)
     * @param offset  (optional, default to 0)
     * @return BangumiNextGroupProfile
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getGroupProfile(
        groupName: kotlin.String,
        limit: kotlin.Int? = 20,
        offset: kotlin.Int? = 0
    ): HttpResponse<BangumiNextGroupProfile> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/p1/groups/{groupName}/profile".replace("{" + "groupName" + "}", "$groupName"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     *
     * 获取帖子列表
     * @param id
     * @return BangumiNextTopicDetail
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getGroupTopicDetail(id: kotlin.Int): HttpResponse<BangumiNextTopicDetail> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/p1/groups/-/topics/{id}".replace("{" + "id" + "}", "$id"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     *
     * 获取帖子列表
     * @param groupName
     * @param limit  (optional, default to 30)
     * @param offset  (optional, default to 0)
     * @return BangumiNextGetGroupTopicsByGroupName200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getGroupTopicsByGroupName(
        groupName: kotlin.String,
        limit: kotlin.Int? = 30,
        offset: kotlin.Int? = 0
    ): HttpResponse<BangumiNextGetGroupTopicsByGroupName200Response> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/p1/groups/{groupName}/topics".replace("{" + "groupName" + "}", "$groupName"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     *
     * 获取帖子列表
     * @param groupName
     * @param type  (optional)
     * @param limit  (optional, default to 30)
     * @param offset  (optional, default to 0)
     * @return BangumiNextListGroupMembersByName200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun listGroupMembersByName(
        groupName: kotlin.String,
        type: BangumiNextListGroupMembersByNameTypeParameter? = null,
        limit: kotlin.Int? = 30,
        offset: kotlin.Int? = 0
    ): HttpResponse<BangumiNextListGroupMembersByName200Response> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        type?.apply { localVariableQuery["type"] = listOf("$type") }
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/p1/groups/{groupName}/members".replace("{" + "groupName" + "}", "$groupName"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


}
